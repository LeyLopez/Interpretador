Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> exhibir_instr
Rule 5     instruccion -> definicion_instr
Rule 6     instruccion -> asignacion_instr
Rule 7     instruccion -> durante_instr
Rule 8     instruccion -> condicion_instr
Rule 9     instruccion -> alternativa_instr
Rule 10    instruccion -> iterar_instr
Rule 11    instruccion -> realizar_durante_instr
Rule 12    instruccion -> call_procedimiento_instr
Rule 13    exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA
Rule 14    definicion_instr -> NUMERO ID PTCOMA
Rule 15    asignacion_instr -> ID IGUAL expresion_numerica PTCOMA
Rule 16    durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 17    condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
Rule 18    alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
Rule 19    iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
Rule 20    realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
Rule 21    definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
Rule 22    call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA
Rule 23    expresion -> expresion_numerica
Rule 24    expresion -> expresion_cadena
Rule 25    expresion -> expresion_booleana
Rule 26    expresion_booleana -> TRUE
Rule 27    expresion_booleana -> FALSE
Rule 28    expresion_numerica -> expresion_numerica MAS expresion_numerica
Rule 29    expresion_numerica -> expresion_numerica MENOS expresion_numerica
Rule 30    expresion_numerica -> expresion_numerica POR expresion_numerica
Rule 31    expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica
Rule 32    expresion_numerica -> MENOS expresion_numerica
Rule 33    expresion_numerica -> PARIZQ expresion_numerica PARDER
Rule 34    expresion_numerica -> ENTERO
Rule 35    expresion_numerica -> DECIMAL
Rule 36    expresion_numerica -> ID
Rule 37    expresion_cadena -> expresion_cadena CONCAT expresion_cadena
Rule 38    expresion_cadena -> CADENA
Rule 39    expresion_cadena -> expresion_numerica
Rule 40    expresion_logica -> expresion_numerica MAYQUE expresion_numerica
Rule 41    expresion_logica -> expresion_numerica MENQUE expresion_numerica
Rule 42    expresion_logica -> expresion_numerica IGUALQUE expresion_numerica
Rule 43    expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica

Terminals, with rules where they appear

ALTERNATIVA          : 18
CADENA               : 38
CONCAT               : 37
CONDICION            : 17 18
DECIMAL              : 35
DIVIDIDO             : 31
DURANTE              : 16 20
ENTERO               : 34
EXHIBIR              : 13
FALSE                : 27
FINALIZAR            : 19
ID                   : 14 15 19 21 22 36
IGUAL                : 15 19
IGUALQUE             : 42
ITERAR               : 19
LLAVDER              : 16 17 18 18 19 20 21
LLAVIZQ              : 16 17 18 18 19 20 21
MAS                  : 28
MAYQUE               : 40
MENOS                : 29 32
MENQUE               : 41
NIGUALQUE            : 43
NUMERO               : 14
PARDER               : 13 16 17 18 20 21 22 33
PARIZQ               : 13 16 17 18 20 21 22 33
POR                  : 30
PROCEDIMIENTO        : 21
PTCOMA               : 13 14 15 20 22
REALIZAR             : 20
TRUE                 : 26
error                : 

Nonterminals, with rules where they appear

alternativa_instr    : 9
asignacion_instr     : 6
call_procedimiento_instr : 12
condicion_instr      : 8
definicion_instr     : 5
durante_instr        : 7
exhibir_instr        : 4
expresion            : 13
expresion_booleana   : 25
expresion_cadena     : 24 37 37
expresion_logica     : 16 17 18 20
expresion_numerica   : 15 19 19 23 28 28 29 29 30 30 31 31 32 33 39 40 40 41 41 42 42 43 43
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 16 17 18 18 19 20 21
iterar_instr         : 10
realizar_durante_instr : 11

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 3

    (3) instrucciones -> instruccion .

    EXHIBIR         reduce using rule 3 (instrucciones -> instruccion .)
    NUMERO          reduce using rule 3 (instrucciones -> instruccion .)
    PROCEDIMIENTO   reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    DURANTE         reduce using rule 3 (instrucciones -> instruccion .)
    CONDICION       reduce using rule 3 (instrucciones -> instruccion .)
    ITERAR          reduce using rule 3 (instrucciones -> instruccion .)
    REALIZAR        reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVDER         reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> exhibir_instr .

    EXHIBIR         reduce using rule 4 (instruccion -> exhibir_instr .)
    NUMERO          reduce using rule 4 (instruccion -> exhibir_instr .)
    PROCEDIMIENTO   reduce using rule 4 (instruccion -> exhibir_instr .)
    ID              reduce using rule 4 (instruccion -> exhibir_instr .)
    DURANTE         reduce using rule 4 (instruccion -> exhibir_instr .)
    CONDICION       reduce using rule 4 (instruccion -> exhibir_instr .)
    ITERAR          reduce using rule 4 (instruccion -> exhibir_instr .)
    REALIZAR        reduce using rule 4 (instruccion -> exhibir_instr .)
    $end            reduce using rule 4 (instruccion -> exhibir_instr .)
    LLAVDER         reduce using rule 4 (instruccion -> exhibir_instr .)


state 5

    (5) instruccion -> definicion_instr .

    EXHIBIR         reduce using rule 5 (instruccion -> definicion_instr .)
    NUMERO          reduce using rule 5 (instruccion -> definicion_instr .)
    PROCEDIMIENTO   reduce using rule 5 (instruccion -> definicion_instr .)
    ID              reduce using rule 5 (instruccion -> definicion_instr .)
    DURANTE         reduce using rule 5 (instruccion -> definicion_instr .)
    CONDICION       reduce using rule 5 (instruccion -> definicion_instr .)
    ITERAR          reduce using rule 5 (instruccion -> definicion_instr .)
    REALIZAR        reduce using rule 5 (instruccion -> definicion_instr .)
    $end            reduce using rule 5 (instruccion -> definicion_instr .)
    LLAVDER         reduce using rule 5 (instruccion -> definicion_instr .)


state 6

    (6) instruccion -> asignacion_instr .

    EXHIBIR         reduce using rule 6 (instruccion -> asignacion_instr .)
    NUMERO          reduce using rule 6 (instruccion -> asignacion_instr .)
    PROCEDIMIENTO   reduce using rule 6 (instruccion -> asignacion_instr .)
    ID              reduce using rule 6 (instruccion -> asignacion_instr .)
    DURANTE         reduce using rule 6 (instruccion -> asignacion_instr .)
    CONDICION       reduce using rule 6 (instruccion -> asignacion_instr .)
    ITERAR          reduce using rule 6 (instruccion -> asignacion_instr .)
    REALIZAR        reduce using rule 6 (instruccion -> asignacion_instr .)
    $end            reduce using rule 6 (instruccion -> asignacion_instr .)
    LLAVDER         reduce using rule 6 (instruccion -> asignacion_instr .)


state 7

    (7) instruccion -> durante_instr .

    EXHIBIR         reduce using rule 7 (instruccion -> durante_instr .)
    NUMERO          reduce using rule 7 (instruccion -> durante_instr .)
    PROCEDIMIENTO   reduce using rule 7 (instruccion -> durante_instr .)
    ID              reduce using rule 7 (instruccion -> durante_instr .)
    DURANTE         reduce using rule 7 (instruccion -> durante_instr .)
    CONDICION       reduce using rule 7 (instruccion -> durante_instr .)
    ITERAR          reduce using rule 7 (instruccion -> durante_instr .)
    REALIZAR        reduce using rule 7 (instruccion -> durante_instr .)
    $end            reduce using rule 7 (instruccion -> durante_instr .)
    LLAVDER         reduce using rule 7 (instruccion -> durante_instr .)


state 8

    (8) instruccion -> condicion_instr .

    EXHIBIR         reduce using rule 8 (instruccion -> condicion_instr .)
    NUMERO          reduce using rule 8 (instruccion -> condicion_instr .)
    PROCEDIMIENTO   reduce using rule 8 (instruccion -> condicion_instr .)
    ID              reduce using rule 8 (instruccion -> condicion_instr .)
    DURANTE         reduce using rule 8 (instruccion -> condicion_instr .)
    CONDICION       reduce using rule 8 (instruccion -> condicion_instr .)
    ITERAR          reduce using rule 8 (instruccion -> condicion_instr .)
    REALIZAR        reduce using rule 8 (instruccion -> condicion_instr .)
    $end            reduce using rule 8 (instruccion -> condicion_instr .)
    LLAVDER         reduce using rule 8 (instruccion -> condicion_instr .)


state 9

    (9) instruccion -> alternativa_instr .

    EXHIBIR         reduce using rule 9 (instruccion -> alternativa_instr .)
    NUMERO          reduce using rule 9 (instruccion -> alternativa_instr .)
    PROCEDIMIENTO   reduce using rule 9 (instruccion -> alternativa_instr .)
    ID              reduce using rule 9 (instruccion -> alternativa_instr .)
    DURANTE         reduce using rule 9 (instruccion -> alternativa_instr .)
    CONDICION       reduce using rule 9 (instruccion -> alternativa_instr .)
    ITERAR          reduce using rule 9 (instruccion -> alternativa_instr .)
    REALIZAR        reduce using rule 9 (instruccion -> alternativa_instr .)
    $end            reduce using rule 9 (instruccion -> alternativa_instr .)
    LLAVDER         reduce using rule 9 (instruccion -> alternativa_instr .)


state 10

    (10) instruccion -> iterar_instr .

    EXHIBIR         reduce using rule 10 (instruccion -> iterar_instr .)
    NUMERO          reduce using rule 10 (instruccion -> iterar_instr .)
    PROCEDIMIENTO   reduce using rule 10 (instruccion -> iterar_instr .)
    ID              reduce using rule 10 (instruccion -> iterar_instr .)
    DURANTE         reduce using rule 10 (instruccion -> iterar_instr .)
    CONDICION       reduce using rule 10 (instruccion -> iterar_instr .)
    ITERAR          reduce using rule 10 (instruccion -> iterar_instr .)
    REALIZAR        reduce using rule 10 (instruccion -> iterar_instr .)
    $end            reduce using rule 10 (instruccion -> iterar_instr .)
    LLAVDER         reduce using rule 10 (instruccion -> iterar_instr .)


state 11

    (11) instruccion -> realizar_durante_instr .

    EXHIBIR         reduce using rule 11 (instruccion -> realizar_durante_instr .)
    NUMERO          reduce using rule 11 (instruccion -> realizar_durante_instr .)
    PROCEDIMIENTO   reduce using rule 11 (instruccion -> realizar_durante_instr .)
    ID              reduce using rule 11 (instruccion -> realizar_durante_instr .)
    DURANTE         reduce using rule 11 (instruccion -> realizar_durante_instr .)
    CONDICION       reduce using rule 11 (instruccion -> realizar_durante_instr .)
    ITERAR          reduce using rule 11 (instruccion -> realizar_durante_instr .)
    REALIZAR        reduce using rule 11 (instruccion -> realizar_durante_instr .)
    $end            reduce using rule 11 (instruccion -> realizar_durante_instr .)
    LLAVDER         reduce using rule 11 (instruccion -> realizar_durante_instr .)


state 12

    (12) instruccion -> call_procedimiento_instr .

    EXHIBIR         reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    NUMERO          reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    PROCEDIMIENTO   reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    ID              reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    DURANTE         reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    CONDICION       reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    ITERAR          reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    REALIZAR        reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    $end            reduce using rule 12 (instruccion -> call_procedimiento_instr .)
    LLAVDER         reduce using rule 12 (instruccion -> call_procedimiento_instr .)


state 13

    (13) exhibir_instr -> EXHIBIR . PARIZQ expresion PARDER PTCOMA

    PARIZQ          shift and go to state 22


state 14

    (14) definicion_instr -> NUMERO . ID PTCOMA

    ID              shift and go to state 23


state 15

    (15) asignacion_instr -> ID . IGUAL expresion_numerica PTCOMA
    (22) call_procedimiento_instr -> ID . PARIZQ PARDER PTCOMA

    IGUAL           shift and go to state 24
    PARIZQ          shift and go to state 25


state 16

    (21) definicion_instr -> PROCEDIMIENTO . ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER

    ID              shift and go to state 26


state 17

    (16) durante_instr -> DURANTE . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 27


state 18

    (17) condicion_instr -> CONDICION . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> CONDICION . PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 28


state 19

    (19) iterar_instr -> ITERAR . ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER

    ID              shift and go to state 29


state 20

    (20) realizar_durante_instr -> REALIZAR . LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA

    LLAVIZQ         shift and go to state 30


state 21

    (2) instrucciones -> instrucciones instruccion .

    EXHIBIR         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NUMERO          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    PROCEDIMIENTO   reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DURANTE         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CONDICION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ITERAR          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    REALIZAR        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVDER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 22

    (13) exhibir_instr -> EXHIBIR PARIZQ . expresion PARDER PTCOMA
    (23) expresion -> . expresion_numerica
    (24) expresion -> . expresion_cadena
    (25) expresion -> . expresion_booleana
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID
    (37) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (38) expresion_cadena -> . CADENA
    (39) expresion_cadena -> . expresion_numerica
    (26) expresion_booleana -> . TRUE
    (27) expresion_booleana -> . FALSE

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39
    CADENA          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42

    expresion                      shift and go to state 32
    expresion_numerica             shift and go to state 33
    expresion_cadena               shift and go to state 34
    expresion_booleana             shift and go to state 35

state 23

    (14) definicion_instr -> NUMERO ID . PTCOMA

    PTCOMA          shift and go to state 43


state 24

    (15) asignacion_instr -> ID IGUAL . expresion_numerica PTCOMA
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 44

state 25

    (22) call_procedimiento_instr -> ID PARIZQ . PARDER PTCOMA

    PARDER          shift and go to state 45


state 26

    (21) definicion_instr -> PROCEDIMIENTO ID . PARIZQ PARDER LLAVIZQ instrucciones LLAVDER

    PARIZQ          shift and go to state 46


state 27

    (16) durante_instr -> DURANTE PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (40) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (41) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_logica               shift and go to state 47
    expresion_numerica             shift and go to state 48

state 28

    (17) condicion_instr -> CONDICION PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> CONDICION PARIZQ . expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (40) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (41) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_logica               shift and go to state 49
    expresion_numerica             shift and go to state 48

state 29

    (19) iterar_instr -> ITERAR ID . IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER

    IGUAL           shift and go to state 50


state 30

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ . instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 51
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 31

    (33) expresion_numerica -> PARIZQ . expresion_numerica PARDER
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 52

state 32

    (13) exhibir_instr -> EXHIBIR PARIZQ expresion . PARDER PTCOMA

    PARDER          shift and go to state 53


state 33

    (23) expresion -> expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica
    (39) expresion_cadena -> expresion_numerica .

  ! reduce/reduce conflict for PARDER resolved using rule 23 (expresion -> expresion_numerica .)
    PARDER          reduce using rule 23 (expresion -> expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57
    CONCAT          reduce using rule 39 (expresion_cadena -> expresion_numerica .)

  ! PARDER          [ reduce using rule 39 (expresion_cadena -> expresion_numerica .) ]


state 34

    (24) expresion -> expresion_cadena .
    (37) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    PARDER          reduce using rule 24 (expresion -> expresion_cadena .)
    CONCAT          shift and go to state 58


state 35

    (25) expresion -> expresion_booleana .

    PARDER          reduce using rule 25 (expresion -> expresion_booleana .)


state 36

    (32) expresion_numerica -> MENOS . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 59

state 37

    (34) expresion_numerica -> ENTERO .

    MAS             reduce using rule 34 (expresion_numerica -> ENTERO .)
    MENOS           reduce using rule 34 (expresion_numerica -> ENTERO .)
    POR             reduce using rule 34 (expresion_numerica -> ENTERO .)
    DIVIDIDO        reduce using rule 34 (expresion_numerica -> ENTERO .)
    PARDER          reduce using rule 34 (expresion_numerica -> ENTERO .)
    CONCAT          reduce using rule 34 (expresion_numerica -> ENTERO .)
    PTCOMA          reduce using rule 34 (expresion_numerica -> ENTERO .)
    MAYQUE          reduce using rule 34 (expresion_numerica -> ENTERO .)
    MENQUE          reduce using rule 34 (expresion_numerica -> ENTERO .)
    IGUALQUE        reduce using rule 34 (expresion_numerica -> ENTERO .)
    NIGUALQUE       reduce using rule 34 (expresion_numerica -> ENTERO .)
    FINALIZAR       reduce using rule 34 (expresion_numerica -> ENTERO .)
    LLAVIZQ         reduce using rule 34 (expresion_numerica -> ENTERO .)


state 38

    (35) expresion_numerica -> DECIMAL .

    MAS             reduce using rule 35 (expresion_numerica -> DECIMAL .)
    MENOS           reduce using rule 35 (expresion_numerica -> DECIMAL .)
    POR             reduce using rule 35 (expresion_numerica -> DECIMAL .)
    DIVIDIDO        reduce using rule 35 (expresion_numerica -> DECIMAL .)
    PARDER          reduce using rule 35 (expresion_numerica -> DECIMAL .)
    CONCAT          reduce using rule 35 (expresion_numerica -> DECIMAL .)
    PTCOMA          reduce using rule 35 (expresion_numerica -> DECIMAL .)
    MAYQUE          reduce using rule 35 (expresion_numerica -> DECIMAL .)
    MENQUE          reduce using rule 35 (expresion_numerica -> DECIMAL .)
    IGUALQUE        reduce using rule 35 (expresion_numerica -> DECIMAL .)
    NIGUALQUE       reduce using rule 35 (expresion_numerica -> DECIMAL .)
    FINALIZAR       reduce using rule 35 (expresion_numerica -> DECIMAL .)
    LLAVIZQ         reduce using rule 35 (expresion_numerica -> DECIMAL .)


state 39

    (36) expresion_numerica -> ID .

    MAS             reduce using rule 36 (expresion_numerica -> ID .)
    MENOS           reduce using rule 36 (expresion_numerica -> ID .)
    POR             reduce using rule 36 (expresion_numerica -> ID .)
    DIVIDIDO        reduce using rule 36 (expresion_numerica -> ID .)
    PARDER          reduce using rule 36 (expresion_numerica -> ID .)
    CONCAT          reduce using rule 36 (expresion_numerica -> ID .)
    PTCOMA          reduce using rule 36 (expresion_numerica -> ID .)
    MAYQUE          reduce using rule 36 (expresion_numerica -> ID .)
    MENQUE          reduce using rule 36 (expresion_numerica -> ID .)
    IGUALQUE        reduce using rule 36 (expresion_numerica -> ID .)
    NIGUALQUE       reduce using rule 36 (expresion_numerica -> ID .)
    FINALIZAR       reduce using rule 36 (expresion_numerica -> ID .)
    LLAVIZQ         reduce using rule 36 (expresion_numerica -> ID .)


state 40

    (38) expresion_cadena -> CADENA .

    CONCAT          reduce using rule 38 (expresion_cadena -> CADENA .)
    PARDER          reduce using rule 38 (expresion_cadena -> CADENA .)


state 41

    (26) expresion_booleana -> TRUE .

    PARDER          reduce using rule 26 (expresion_booleana -> TRUE .)


state 42

    (27) expresion_booleana -> FALSE .

    PARDER          reduce using rule 27 (expresion_booleana -> FALSE .)


state 43

    (14) definicion_instr -> NUMERO ID PTCOMA .

    EXHIBIR         reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    NUMERO          reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    PROCEDIMIENTO   reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    ID              reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    DURANTE         reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    CONDICION       reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    ITERAR          reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    REALIZAR        reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    $end            reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)
    LLAVDER         reduce using rule 14 (definicion_instr -> NUMERO ID PTCOMA .)


state 44

    (15) asignacion_instr -> ID IGUAL expresion_numerica . PTCOMA
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PTCOMA          shift and go to state 60
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 45

    (22) call_procedimiento_instr -> ID PARIZQ PARDER . PTCOMA

    PTCOMA          shift and go to state 61


state 46

    (21) definicion_instr -> PROCEDIMIENTO ID PARIZQ . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 62


state 47

    (16) durante_instr -> DURANTE PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 63


state 48

    (40) expresion_logica -> expresion_numerica . MAYQUE expresion_numerica
    (41) expresion_logica -> expresion_numerica . MENQUE expresion_numerica
    (42) expresion_logica -> expresion_numerica . IGUALQUE expresion_numerica
    (43) expresion_logica -> expresion_numerica . NIGUALQUE expresion_numerica
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAYQUE          shift and go to state 64
    MENQUE          shift and go to state 65
    IGUALQUE        shift and go to state 66
    NIGUALQUE       shift and go to state 67
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 49

    (17) condicion_instr -> CONDICION PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica . PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER

    PARDER          shift and go to state 68


state 50

    (19) iterar_instr -> ITERAR ID IGUAL . expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 69

state 51

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones . LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 70
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 52

    (33) expresion_numerica -> PARIZQ expresion_numerica . PARDER
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          shift and go to state 71
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 53

    (13) exhibir_instr -> EXHIBIR PARIZQ expresion PARDER . PTCOMA

    PTCOMA          shift and go to state 72


state 54

    (28) expresion_numerica -> expresion_numerica MAS . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 73

state 55

    (29) expresion_numerica -> expresion_numerica MENOS . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 74

state 56

    (30) expresion_numerica -> expresion_numerica POR . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 75

state 57

    (31) expresion_numerica -> expresion_numerica DIVIDIDO . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 76

state 58

    (37) expresion_cadena -> expresion_cadena CONCAT . expresion_cadena
    (37) expresion_cadena -> . expresion_cadena CONCAT expresion_cadena
    (38) expresion_cadena -> . CADENA
    (39) expresion_cadena -> . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    CADENA          shift and go to state 40
    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_cadena               shift and go to state 77
    expresion_numerica             shift and go to state 78

state 59

    (32) expresion_numerica -> MENOS expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    MENOS           reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    POR             reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    DIVIDIDO        reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    PARDER          reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    CONCAT          reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    PTCOMA          reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    MAYQUE          reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    MENQUE          reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    FINALIZAR       reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)
    LLAVIZQ         reduce using rule 32 (expresion_numerica -> MENOS expresion_numerica .)

  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! POR             [ shift and go to state 56 ]
  ! DIVIDIDO        [ shift and go to state 57 ]


state 60

    (15) asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .

    EXHIBIR         reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    NUMERO          reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    PROCEDIMIENTO   reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ID              reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    DURANTE         reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    CONDICION       reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    ITERAR          reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    REALIZAR        reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    $end            reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)
    LLAVDER         reduce using rule 15 (asignacion_instr -> ID IGUAL expresion_numerica PTCOMA .)


state 61

    (22) call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .

    EXHIBIR         reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    NUMERO          reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    PROCEDIMIENTO   reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    ID              reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    DURANTE         reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    CONDICION       reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    ITERAR          reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    REALIZAR        reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    $end            reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)
    LLAVDER         reduce using rule 22 (call_procedimiento_instr -> ID PARIZQ PARDER PTCOMA .)


state 62

    (21) definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 79


state 63

    (16) durante_instr -> DURANTE PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 80


state 64

    (40) expresion_logica -> expresion_numerica MAYQUE . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 81

state 65

    (41) expresion_logica -> expresion_numerica MENQUE . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 82

state 66

    (42) expresion_logica -> expresion_numerica IGUALQUE . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 83

state 67

    (43) expresion_logica -> expresion_numerica NIGUALQUE . expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 84

state 68

    (17) condicion_instr -> CONDICION PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER . LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 85


state 69

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica . FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    FINALIZAR       shift and go to state 86
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 70

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER . DURANTE PARIZQ expresion_logica PARDER PTCOMA

    DURANTE         shift and go to state 87


state 71

    (33) expresion_numerica -> PARIZQ expresion_numerica PARDER .

    MAS             reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENOS           reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    POR             reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    DIVIDIDO        reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PARDER          reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    CONCAT          reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    PTCOMA          reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MAYQUE          reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    MENQUE          reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    IGUALQUE        reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    NIGUALQUE       reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    FINALIZAR       reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)
    LLAVIZQ         reduce using rule 33 (expresion_numerica -> PARIZQ expresion_numerica PARDER .)


state 72

    (13) exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .

    EXHIBIR         reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    NUMERO          reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    PROCEDIMIENTO   reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    ID              reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    DURANTE         reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    CONDICION       reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    ITERAR          reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    REALIZAR        reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    $end            reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)
    LLAVDER         reduce using rule 13 (exhibir_instr -> EXHIBIR PARIZQ expresion PARDER PTCOMA .)


state 73

    (28) expresion_numerica -> expresion_numerica MAS expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENOS           reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PARDER          reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    CONCAT          reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    PTCOMA          reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MAYQUE          reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    MENQUE          reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    IGUALQUE        reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    NIGUALQUE       reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    FINALIZAR       reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    LLAVIZQ         reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .)
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! POR             [ reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 28 (expresion_numerica -> expresion_numerica MAS expresion_numerica .) ]
  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]


state 74

    (29) expresion_numerica -> expresion_numerica MENOS expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENOS           reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PARDER          reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    CONCAT          reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    PTCOMA          reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MAYQUE          reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    MENQUE          reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    IGUALQUE        reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    NIGUALQUE       reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    FINALIZAR       reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    LLAVIZQ         reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .)
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57

  ! POR             [ reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! DIVIDIDO        [ reduce using rule 29 (expresion_numerica -> expresion_numerica MENOS expresion_numerica .) ]
  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]


state 75

    (30) expresion_numerica -> expresion_numerica POR expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENOS           reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    POR             reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    DIVIDIDO        reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PARDER          reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    CONCAT          reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    PTCOMA          reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MAYQUE          reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    MENQUE          reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    IGUALQUE        reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    NIGUALQUE       reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    FINALIZAR       reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)
    LLAVIZQ         reduce using rule 30 (expresion_numerica -> expresion_numerica POR expresion_numerica .)

  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! POR             [ shift and go to state 56 ]
  ! DIVIDIDO        [ shift and go to state 57 ]


state 76

    (31) expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    MAS             reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENOS           reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    POR             reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    DIVIDIDO        reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PARDER          reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    CONCAT          reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    PTCOMA          reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MAYQUE          reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    MENQUE          reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    IGUALQUE        reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    NIGUALQUE       reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    FINALIZAR       reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)
    LLAVIZQ         reduce using rule 31 (expresion_numerica -> expresion_numerica DIVIDIDO expresion_numerica .)

  ! MAS             [ shift and go to state 54 ]
  ! MENOS           [ shift and go to state 55 ]
  ! POR             [ shift and go to state 56 ]
  ! DIVIDIDO        [ shift and go to state 57 ]


state 77

    (37) expresion_cadena -> expresion_cadena CONCAT expresion_cadena .
    (37) expresion_cadena -> expresion_cadena . CONCAT expresion_cadena

    CONCAT          reduce using rule 37 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)
    PARDER          reduce using rule 37 (expresion_cadena -> expresion_cadena CONCAT expresion_cadena .)

  ! CONCAT          [ shift and go to state 58 ]


state 78

    (39) expresion_cadena -> expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    CONCAT          reduce using rule 39 (expresion_cadena -> expresion_numerica .)
    PARDER          reduce using rule 39 (expresion_cadena -> expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 79

    (21) definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 88
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 80

    (16) durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 89
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 81

    (40) expresion_logica -> expresion_numerica MAYQUE expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 40 (expresion_logica -> expresion_numerica MAYQUE expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 82

    (41) expresion_logica -> expresion_numerica MENQUE expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 41 (expresion_logica -> expresion_numerica MENQUE expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 83

    (42) expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 42 (expresion_logica -> expresion_numerica IGUALQUE expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 84

    (43) expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    PARDER          reduce using rule 43 (expresion_logica -> expresion_numerica NIGUALQUE expresion_numerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 85

    (17) condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER
    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ . instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 90
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 86

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR . expresion_numerica LLAVIZQ instrucciones LLAVDER
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_numerica             shift and go to state 91

state 87

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE . PARIZQ expresion_logica PARDER PTCOMA

    PARIZQ          shift and go to state 92


state 88

    (21) definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 93
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 89

    (16) durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 94
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 90

    (17) condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER
    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones . LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 95
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 91

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica . LLAVIZQ instrucciones LLAVDER
    (28) expresion_numerica -> expresion_numerica . MAS expresion_numerica
    (29) expresion_numerica -> expresion_numerica . MENOS expresion_numerica
    (30) expresion_numerica -> expresion_numerica . POR expresion_numerica
    (31) expresion_numerica -> expresion_numerica . DIVIDIDO expresion_numerica

    LLAVIZQ         shift and go to state 96
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    POR             shift and go to state 56
    DIVIDIDO        shift and go to state 57


state 92

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ . expresion_logica PARDER PTCOMA
    (40) expresion_logica -> . expresion_numerica MAYQUE expresion_numerica
    (41) expresion_logica -> . expresion_numerica MENQUE expresion_numerica
    (42) expresion_logica -> . expresion_numerica IGUALQUE expresion_numerica
    (43) expresion_logica -> . expresion_numerica NIGUALQUE expresion_numerica
    (28) expresion_numerica -> . expresion_numerica MAS expresion_numerica
    (29) expresion_numerica -> . expresion_numerica MENOS expresion_numerica
    (30) expresion_numerica -> . expresion_numerica POR expresion_numerica
    (31) expresion_numerica -> . expresion_numerica DIVIDIDO expresion_numerica
    (32) expresion_numerica -> . MENOS expresion_numerica
    (33) expresion_numerica -> . PARIZQ expresion_numerica PARDER
    (34) expresion_numerica -> . ENTERO
    (35) expresion_numerica -> . DECIMAL
    (36) expresion_numerica -> . ID

    MENOS           shift and go to state 36
    PARIZQ          shift and go to state 31
    ENTERO          shift and go to state 37
    DECIMAL         shift and go to state 38
    ID              shift and go to state 39

    expresion_logica               shift and go to state 97
    expresion_numerica             shift and go to state 48

state 93

    (21) definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .

    EXHIBIR         reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    PROCEDIMIENTO   reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    DURANTE         reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    CONDICION       reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    ITERAR          reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    REALIZAR        reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 21 (definicion_instr -> PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER .)


state 94

    (16) durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .

    EXHIBIR         reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PROCEDIMIENTO   reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    DURANTE         reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    CONDICION       reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ITERAR          reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    REALIZAR        reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 16 (durante_instr -> DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)


state 95

    (17) condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .
    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER . ALTERNATIVA LLAVIZQ instrucciones LLAVDER

    EXHIBIR         reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    PROCEDIMIENTO   reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    DURANTE         reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    CONDICION       reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ITERAR          reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    REALIZAR        reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 17 (condicion_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER .)
    ALTERNATIVA     shift and go to state 98


state 96

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 99
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 97

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica . PARDER PTCOMA

    PARDER          shift and go to state 100


state 98

    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA . LLAVIZQ instrucciones LLAVDER

    LLAVIZQ         shift and go to state 101


state 99

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 102
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 100

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER . PTCOMA

    PTCOMA          shift and go to state 103


state 101

    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ . instrucciones LLAVDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 3
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 102

    (19) iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .

    EXHIBIR         reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    PROCEDIMIENTO   reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    DURANTE         reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    CONDICION       reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    ITERAR          reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    REALIZAR        reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 19 (iterar_instr -> ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER .)


state 103

    (20) realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .

    EXHIBIR         reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    NUMERO          reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    PROCEDIMIENTO   reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    ID              reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    DURANTE         reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    CONDICION       reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    ITERAR          reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    REALIZAR        reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    $end            reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)
    LLAVDER         reduce using rule 20 (realizar_durante_instr -> REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA .)


state 104

    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones . LLAVDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . exhibir_instr
    (5) instruccion -> . definicion_instr
    (6) instruccion -> . asignacion_instr
    (7) instruccion -> . durante_instr
    (8) instruccion -> . condicion_instr
    (9) instruccion -> . alternativa_instr
    (10) instruccion -> . iterar_instr
    (11) instruccion -> . realizar_durante_instr
    (12) instruccion -> . call_procedimiento_instr
    (13) exhibir_instr -> . EXHIBIR PARIZQ expresion PARDER PTCOMA
    (14) definicion_instr -> . NUMERO ID PTCOMA
    (21) definicion_instr -> . PROCEDIMIENTO ID PARIZQ PARDER LLAVIZQ instrucciones LLAVDER
    (15) asignacion_instr -> . ID IGUAL expresion_numerica PTCOMA
    (16) durante_instr -> . DURANTE PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (17) condicion_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER
    (18) alternativa_instr -> . CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER
    (19) iterar_instr -> . ITERAR ID IGUAL expresion_numerica FINALIZAR expresion_numerica LLAVIZQ instrucciones LLAVDER
    (20) realizar_durante_instr -> . REALIZAR LLAVIZQ instrucciones LLAVDER DURANTE PARIZQ expresion_logica PARDER PTCOMA
    (22) call_procedimiento_instr -> . ID PARIZQ PARDER PTCOMA

    LLAVDER         shift and go to state 105
    EXHIBIR         shift and go to state 13
    NUMERO          shift and go to state 14
    PROCEDIMIENTO   shift and go to state 16
    ID              shift and go to state 15
    DURANTE         shift and go to state 17
    CONDICION       shift and go to state 18
    ITERAR          shift and go to state 19
    REALIZAR        shift and go to state 20

    instruccion                    shift and go to state 21
    exhibir_instr                  shift and go to state 4
    definicion_instr               shift and go to state 5
    asignacion_instr               shift and go to state 6
    durante_instr                  shift and go to state 7
    condicion_instr                shift and go to state 8
    alternativa_instr              shift and go to state 9
    iterar_instr                   shift and go to state 10
    realizar_durante_instr         shift and go to state 11
    call_procedimiento_instr       shift and go to state 12

state 105

    (18) alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .

    EXHIBIR         reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    NUMERO          reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    PROCEDIMIENTO   reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    ID              reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    DURANTE         reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    CONDICION       reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    ITERAR          reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    REALIZAR        reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    $end            reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)
    LLAVDER         reduce using rule 18 (alternativa_instr -> CONDICION PARIZQ expresion_logica PARDER LLAVIZQ instrucciones LLAVDER ALTERNATIVA LLAVIZQ instrucciones LLAVDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 33 resolved using rule (expresion -> expresion_numerica)
WARNING: rejected rule (expresion_cadena -> expresion_numerica) in state 33
